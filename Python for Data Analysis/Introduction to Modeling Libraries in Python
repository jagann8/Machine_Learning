{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNWrlpa3kaVyLDXrvKUT15u"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"4bubf08i9SO9","executionInfo":{"status":"ok","timestamp":1693419093976,"user_tz":-330,"elapsed":766,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"outputs":[],"source":["# import libraries\n","import pandas as pd\n","import numpy as np"]},{"cell_type":"markdown","source":["## interfacing between pandas and model code"],"metadata":{"id":"hZp4A4Be_C5u"}},{"cell_type":"code","source":["# an important part for model development process is feature engineering in the machine learning\n","\n","# data aggregation and groupby tools are very often used in feature engineering context"],"metadata":{"id":"dYZys59h_K-8","executionInfo":{"status":"ok","timestamp":1693419095126,"user_tz":-330,"elapsed":424,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["# to convert dataframe to numpy by using to_numpy\n","data=pd.DataFrame({'x0':[1,2,3,4,5],\n","                 'x1':[0.01,-0.01,0.25,-4.1,0.],\n","                 'x2':[-1.5, 0., 3.6, 1.3, -2.]})"],"metadata":{"id":"FkNCUf4Z9uFK","executionInfo":{"status":"ok","timestamp":1693419095131,"user_tz":-330,"elapsed":426,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"-Nq_nI-EAciE","executionInfo":{"status":"ok","timestamp":1693419095135,"user_tz":-330,"elapsed":429,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"71780696-80a2-4dc6-9014-a021cdbdafb9"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   x0    x1   x2\n","0   1  0.01 -1.5\n","1   2 -0.01  0.0\n","2   3  0.25  3.6\n","3   4 -4.10  1.3\n","4   5  0.00 -2.0"],"text/html":["\n","  <div id=\"df-89ec9ce6-ae46-4204-831e-6a565e27b1ff\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>x0</th>\n","      <th>x1</th>\n","      <th>x2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0.01</td>\n","      <td>-1.5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>-0.01</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0.25</td>\n","      <td>3.6</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>-4.10</td>\n","      <td>1.3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0.00</td>\n","      <td>-2.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-89ec9ce6-ae46-4204-831e-6a565e27b1ff')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-89ec9ce6-ae46-4204-831e-6a565e27b1ff button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-89ec9ce6-ae46-4204-831e-6a565e27b1ff');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-349a42ad-ba55-4086-b557-77e6523b98a7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-349a42ad-ba55-4086-b557-77e6523b98a7')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-349a42ad-ba55-4086-b557-77e6523b98a7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["data.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ms_1LlQ9AoE3","executionInfo":{"status":"ok","timestamp":1693419095138,"user_tz":-330,"elapsed":425,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"171afb42-4109-44a6-9abd-7d75cc39355e"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['x0', 'x1', 'x2'], dtype='object')"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["data.to_numpy()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2YtymNgPArX5","executionInfo":{"status":"ok","timestamp":1693419095141,"user_tz":-330,"elapsed":418,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"6cee0dd0-fdf0-45e0-d51c-ca8d55a3c90a"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1.  ,  0.01, -1.5 ],\n","       [ 2.  , -0.01,  0.  ],\n","       [ 3.  ,  0.25,  3.6 ],\n","       [ 4.  , -4.1 ,  1.3 ],\n","       [ 5.  ,  0.  , -2.  ]])"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# back to  dataframe , we can pass the two dimensional ndarray with optional columns\n","df2=pd.DataFrame(data.to_numpy(),columns=['one','two','three'])"],"metadata":{"id":"Ll6BSOh8Az3e","executionInfo":{"status":"ok","timestamp":1693419095142,"user_tz":-330,"elapsed":413,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Hlt3vSIZBOVF","executionInfo":{"status":"ok","timestamp":1693419095144,"user_tz":-330,"elapsed":412,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"08b638f8-bca3-4328-e6f6-9212900f6b90"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   one   two  three\n","0  1.0  0.01   -1.5\n","1  2.0 -0.01    0.0\n","2  3.0  0.25    3.6\n","3  4.0 -4.10    1.3\n","4  5.0  0.00   -2.0"],"text/html":["\n","  <div id=\"df-7d59756b-74f5-4899-ae34-c9808b56ca27\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>one</th>\n","      <th>two</th>\n","      <th>three</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.0</td>\n","      <td>0.01</td>\n","      <td>-1.5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2.0</td>\n","      <td>-0.01</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3.0</td>\n","      <td>0.25</td>\n","      <td>3.6</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.0</td>\n","      <td>-4.10</td>\n","      <td>1.3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.0</td>\n","      <td>0.00</td>\n","      <td>-2.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7d59756b-74f5-4899-ae34-c9808b56ca27')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7d59756b-74f5-4899-ae34-c9808b56ca27 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7d59756b-74f5-4899-ae34-c9808b56ca27');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e15212b5-fad0-4aa4-bf99-b9dcbece6d25\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e15212b5-fad0-4aa4-bf99-b9dcbece6d25')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e15212b5-fad0-4aa4-bf99-b9dcbece6d25 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["# to_numpy method is used when our data is homogeneous. if we have heterogeneous data, the result will be ndarray objects\n","df3=data.copy()\n","df3['strings']=['a','b','c','d','e']\n","df3"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"paeDsD-_Biy-","executionInfo":{"status":"ok","timestamp":1693419095147,"user_tz":-330,"elapsed":407,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"73c77180-eb61-4061-c5fc-4146d6aaaf5a"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   x0    x1   x2 strings\n","0   1  0.01 -1.5       a\n","1   2 -0.01  0.0       b\n","2   3  0.25  3.6       c\n","3   4 -4.10  1.3       d\n","4   5  0.00 -2.0       e"],"text/html":["\n","  <div id=\"df-0ebf661a-0789-4992-b4c6-95b47ed11871\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>x0</th>\n","      <th>x1</th>\n","      <th>x2</th>\n","      <th>strings</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0.01</td>\n","      <td>-1.5</td>\n","      <td>a</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>-0.01</td>\n","      <td>0.0</td>\n","      <td>b</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0.25</td>\n","      <td>3.6</td>\n","      <td>c</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>-4.10</td>\n","      <td>1.3</td>\n","      <td>d</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0.00</td>\n","      <td>-2.0</td>\n","      <td>e</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0ebf661a-0789-4992-b4c6-95b47ed11871')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0ebf661a-0789-4992-b4c6-95b47ed11871 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0ebf661a-0789-4992-b4c6-95b47ed11871');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-61a21390-8fbf-42a4-b2d0-fbf39c30cc1b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-61a21390-8fbf-42a4-b2d0-fbf39c30cc1b')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-61a21390-8fbf-42a4-b2d0-fbf39c30cc1b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df3.to_numpy()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o-Kiu_loCHUj","executionInfo":{"status":"ok","timestamp":1693419095149,"user_tz":-330,"elapsed":404,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"1307986e-964f-4710-b587-10f1f75267dd"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 0.01, -1.5, 'a'],\n","       [2, -0.01, 0.0, 'b'],\n","       [3, 0.25, 3.6, 'c'],\n","       [4, -4.1, 1.3, 'd'],\n","       [5, 0.0, -2.0, 'e']], dtype=object)"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["# in some set of models. we need use sub set of columns. we can do this by using loc indexing to numpy\n","model_col=['x1','x2']\n","data.loc[:,model_col].to_numpy()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mnhKE0IYCl9N","executionInfo":{"status":"ok","timestamp":1693419095151,"user_tz":-330,"elapsed":399,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"4e1f7adb-abec-489a-dc1e-e2dda2c5376d"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0.01, -1.5 ],\n","       [-0.01,  0.  ],\n","       [ 0.25,  3.6 ],\n","       [-4.1 ,  1.3 ],\n","       [ 0.  , -2.  ]])"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["# suppose we have non numerical data in our dataset\n","data['category']=pd.Categorical(['a','b','a','a','b'],categories=['a','b'])\n","data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"dQsp4KPhDH74","executionInfo":{"status":"ok","timestamp":1693419095152,"user_tz":-330,"elapsed":390,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"b0da2f62-05b7-48c7-9d80-4e266047015c"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   x0    x1   x2 category\n","0   1  0.01 -1.5        a\n","1   2 -0.01  0.0        b\n","2   3  0.25  3.6        a\n","3   4 -4.10  1.3        a\n","4   5  0.00 -2.0        b"],"text/html":["\n","  <div id=\"df-bd5b64f2-dbe5-47ec-98eb-48cb48bee27a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>x0</th>\n","      <th>x1</th>\n","      <th>x2</th>\n","      <th>category</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0.01</td>\n","      <td>-1.5</td>\n","      <td>a</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>-0.01</td>\n","      <td>0.0</td>\n","      <td>b</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0.25</td>\n","      <td>3.6</td>\n","      <td>a</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>-4.10</td>\n","      <td>1.3</td>\n","      <td>a</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0.00</td>\n","      <td>-2.0</td>\n","      <td>b</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bd5b64f2-dbe5-47ec-98eb-48cb48bee27a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bd5b64f2-dbe5-47ec-98eb-48cb48bee27a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bd5b64f2-dbe5-47ec-98eb-48cb48bee27a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-aede87e9-f8a3-4580-8d8a-1ae08a8511bf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-aede87e9-f8a3-4580-8d8a-1ae08a8511bf')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-aede87e9-f8a3-4580-8d8a-1ae08a8511bf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["# if we want to replace category column with dummy variables, we create dummy variables, drop the category column -\n","# - then join the result"],"metadata":{"id":"0Yc--bBaDiFj","executionInfo":{"status":"ok","timestamp":1693419095155,"user_tz":-330,"elapsed":390,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["dummies=pd.get_dummies(data.category,prefix='category')\n","data_with_dummies=data.drop('category',axis=1).join(dummies)"],"metadata":{"id":"a4iMnZNSD56J","executionInfo":{"status":"ok","timestamp":1693419095156,"user_tz":-330,"elapsed":390,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["data_with_dummies"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"uVSRkEQdETRt","executionInfo":{"status":"ok","timestamp":1693419095157,"user_tz":-330,"elapsed":390,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"30c621fd-fe9e-4392-a5f1-dab55fb95196"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   x0    x1   x2  category_a  category_b\n","0   1  0.01 -1.5           1           0\n","1   2 -0.01  0.0           0           1\n","2   3  0.25  3.6           1           0\n","3   4 -4.10  1.3           1           0\n","4   5  0.00 -2.0           0           1"],"text/html":["\n","  <div id=\"df-3506829c-2ec3-4f16-b773-c326a85a1091\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>x0</th>\n","      <th>x1</th>\n","      <th>x2</th>\n","      <th>category_a</th>\n","      <th>category_b</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0.01</td>\n","      <td>-1.5</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>-0.01</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0.25</td>\n","      <td>3.6</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>-4.10</td>\n","      <td>1.3</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0.00</td>\n","      <td>-2.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3506829c-2ec3-4f16-b773-c326a85a1091')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3506829c-2ec3-4f16-b773-c326a85a1091 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3506829c-2ec3-4f16-b773-c326a85a1091');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-41d99f07-1a12-46c9-872f-a4d8f490959f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-41d99f07-1a12-46c9-872f-a4d8f490959f')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-41d99f07-1a12-46c9-872f-a4d8f490959f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["## creating model descriptions with patsy"],"metadata":{"id":"HbvEd6_JFGdF"}},{"cell_type":"code","source":["# patsy is python library for describing statistical models especially linear models with string based formula syntax"],"metadata":{"id":"kLhrxt3FFGKw","executionInfo":{"status":"ok","timestamp":1693419095158,"user_tz":-330,"elapsed":382,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["# patsy is well suported for specifying linear models in statsmodels\n","\n","# patsy special formula are special string syntax it should like\n","# y ~ a+b\n","\n","# the a+b doesnot mean a add on b. but rather that these are terms in design matrix created for model\n","\n","# patsy.dematrices function takes formula string along with dataset (its eihter dataframe or dictionary of arrays) and\n","# - and produces the design metrices for linear model"],"metadata":{"id":"0fmRvc4QG2Cg","executionInfo":{"status":"ok","timestamp":1693419095159,"user_tz":-330,"elapsed":383,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["data=pd.DataFrame({'x0':[1,2,3,4,5],\n","                   'x1':[0.01, -0.01, 0.25, -4.1, 0.],\n","                   'y':[-1.5, 0., 3.6, 1.3, -2.]})"],"metadata":{"id":"OWNB2M00IWu2","executionInfo":{"status":"ok","timestamp":1693419095160,"user_tz":-330,"elapsed":383,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"Xb_49TmBIiSO","executionInfo":{"status":"ok","timestamp":1693419095162,"user_tz":-330,"elapsed":384,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"a279f467-d90d-4ebf-8ec4-635c0436c58f"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   x0    x1    y\n","0   1  0.01 -1.5\n","1   2 -0.01  0.0\n","2   3  0.25  3.6\n","3   4 -4.10  1.3\n","4   5  0.00 -2.0"],"text/html":["\n","  <div id=\"df-b4e931f1-fb47-44a8-b5e0-c6b110ffa2b5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>x0</th>\n","      <th>x1</th>\n","      <th>y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0.01</td>\n","      <td>-1.5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>-0.01</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0.25</td>\n","      <td>3.6</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>-4.10</td>\n","      <td>1.3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0.00</td>\n","      <td>-2.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b4e931f1-fb47-44a8-b5e0-c6b110ffa2b5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b4e931f1-fb47-44a8-b5e0-c6b110ffa2b5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b4e931f1-fb47-44a8-b5e0-c6b110ffa2b5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8b898d3e-89b6-4fab-b394-96d2c0ca1c29\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8b898d3e-89b6-4fab-b394-96d2c0ca1c29')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8b898d3e-89b6-4fab-b394-96d2c0ca1c29 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["import patsy\n","\n","y,X=patsy.dmatrices(' y ~ x0 + x1',data)"],"metadata":{"id":"SWcbrT6lImER","executionInfo":{"status":"ok","timestamp":1693419095164,"user_tz":-330,"elapsed":382,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2W8GWxxkJjLK","executionInfo":{"status":"ok","timestamp":1693419095165,"user_tz":-330,"elapsed":382,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"8858fe93-ad39-4e0b-c460-a5d684576667"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DesignMatrix with shape (5, 1)\n","     y\n","  -1.5\n","   0.0\n","   3.6\n","   1.3\n","  -2.0\n","  Terms:\n","    'y' (column 0)"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6LoihCqEJl70","executionInfo":{"status":"ok","timestamp":1693419095167,"user_tz":-330,"elapsed":377,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"32ab60c3-ad65-4a45-9a2f-da80875baf0b"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DesignMatrix with shape (5, 3)\n","  Intercept  x0     x1\n","          1   1   0.01\n","          1   2  -0.01\n","          1   3   0.25\n","          1   4  -4.10\n","          1   5   0.00\n","  Terms:\n","    'Intercept' (column 0)\n","    'x0' (column 1)\n","    'x1' (column 2)"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["# these patsy DesignMatrix instance are numpy ndarrays with additional metadata\n","np.asarray(y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UQ8Z_x78Jsla","executionInfo":{"status":"ok","timestamp":1693419095168,"user_tz":-330,"elapsed":373,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"7f0944b4-49e2-43c4-ce23-fcca20269e45"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-1.5],\n","       [ 0. ],\n","       [ 3.6],\n","       [ 1.3],\n","       [-2. ]])"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["np.asarray(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XLbtJcDqJ_Nn","executionInfo":{"status":"ok","timestamp":1693419095170,"user_tz":-330,"elapsed":369,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"8dff2c19-14fc-4dd8-bd06-62d633b52deb"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1.  ,  1.  ,  0.01],\n","       [ 1.  ,  2.  , -0.01],\n","       [ 1.  ,  3.  ,  0.25],\n","       [ 1.  ,  4.  , -4.1 ],\n","       [ 1.  ,  5.  ,  0.  ]])"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["# you may wonder where intercept term came from. this is convention for linear models like ordinary least squares (OLS) regression\n","\n","# we can suppress the intercept by adding the term +0 to the model\n","patsy.dmatrices('y~x0+x1+0',data)[1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KPXMawpZKDdU","executionInfo":{"status":"ok","timestamp":1693419095172,"user_tz":-330,"elapsed":366,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"61fe088b-8e4b-4be4-bf93-4b1d020efd53"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DesignMatrix with shape (5, 2)\n","  x0     x1\n","   1   0.01\n","   2  -0.01\n","   3   0.25\n","   4  -4.10\n","   5   0.00\n","  Terms:\n","    'x0' (column 0)\n","    'x1' (column 1)"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["# pasty objects can directly pass into the algorithms like numpy.linalg.lstsq , which performs the\n","# - ordinary least squares regression\n","\n","coef,resid,_,_=np.linalg.lstsq(X,y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TagRyzstLRox","executionInfo":{"status":"ok","timestamp":1693419095173,"user_tz":-330,"elapsed":358,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"721e4732-18b9-4cde-df68-901dded4c081"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-26-8041aaf15e34>:4: FutureWarning: `rcond` parameter will change to the default of machine precision times ``max(M, N)`` where M and N are the input matrix dimensions.\n","To use the future default and silence this warning we advise to pass `rcond=None`, to keep using the old, explicitly pass `rcond=-1`.\n","  coef,resid,_,_=np.linalg.lstsq(X,y)\n"]}]},{"cell_type":"code","source":["coef"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IUub2TwFL8bG","executionInfo":{"status":"ok","timestamp":1693419095174,"user_tz":-330,"elapsed":351,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"021e0e56-14fb-49c4-d0f3-0a8741e2e1da"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0.31290976],\n","       [-0.07910564],\n","       [-0.26546384]])"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["coef=pd.Series(coef.squeeze(),index=X.design_info.column_names)\n","coef"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MH2jW6ruMBE2","executionInfo":{"status":"ok","timestamp":1693419095175,"user_tz":-330,"elapsed":341,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"53989c2f-3906-4fff-da1b-1bf4d823f700"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Intercept    0.312910\n","x0          -0.079106\n","x1          -0.265464\n","dtype: float64"]},"metadata":{},"execution_count":28}]},{"cell_type":"markdown","source":["### data transformations into patsy formulas\n","\n","> we can mix the python code into patsy formulas, when evaluating the formula, the library will try to find the functions you use in enclosing scope"],"metadata":{"id":"_F0SxXezMT8O"}},{"cell_type":"code","source":["y,X=patsy.dmatrices('y~x0+np.log(np.abs(x1)+1)',data)\n","X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V60CK38lM1qu","executionInfo":{"status":"ok","timestamp":1693419095176,"user_tz":-330,"elapsed":334,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"cc2b6cd5-c488-44d4-f4bb-e05b15abfa3e"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DesignMatrix with shape (5, 3)\n","  Intercept  x0  np.log(np.abs(x1) + 1)\n","          1   1                 0.00995\n","          1   2                 0.00995\n","          1   3                 0.22314\n","          1   4                 1.62924\n","          1   5                 0.00000\n","  Terms:\n","    'Intercept' (column 0)\n","    'x0' (column 1)\n","    'np.log(np.abs(x1) + 1)' (column 2)"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["# some commonly used variable transformations include standardizing (to mean 0 and variance 1) and centering (subtracting mean)\n","# - patsy has built in functions for this purpose"],"metadata":{"id":"BESnAcEMNuOL","executionInfo":{"status":"ok","timestamp":1693419095177,"user_tz":-330,"elapsed":326,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["y,X=patsy.dmatrices('y~ standardize(x0) + center(x1)', data)"],"metadata":{"id":"KQwhjv7INx1x","executionInfo":{"status":"ok","timestamp":1693419095178,"user_tz":-330,"elapsed":325,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":31,"outputs":[]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tvpUcfuTN_5f","executionInfo":{"status":"ok","timestamp":1693419095179,"user_tz":-330,"elapsed":325,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"dfbecc26-7400-49c2-ed26-64e034058f0e"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DesignMatrix with shape (5, 1)\n","     y\n","  -1.5\n","   0.0\n","   3.6\n","   1.3\n","  -2.0\n","  Terms:\n","    'y' (column 0)"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gb9ZO5gaOBRH","executionInfo":{"status":"ok","timestamp":1693419095180,"user_tz":-330,"elapsed":319,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"c404446c-b9da-4406-f5c2-bc7b07d79e42"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DesignMatrix with shape (5, 3)\n","  Intercept  standardize(x0)  center(x1)\n","          1         -1.41421        0.78\n","          1         -0.70711        0.76\n","          1          0.00000        1.02\n","          1          0.70711       -3.33\n","          1          1.41421        0.77\n","  Terms:\n","    'Intercept' (column 0)\n","    'standardize(x0)' (column 1)\n","    'center(x1)' (column 2)"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["new_data=pd.DataFrame({'x0':[6,7,8,9],\n","                       'x1':[3.1, -0.5, 0, 2.3],\n","                       'y':[1, 2, 3, 4]})"],"metadata":{"id":"7tjD9LKVq-v-","executionInfo":{"status":"ok","timestamp":1693419095181,"user_tz":-330,"elapsed":313,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["X.design_info"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bTS-BNgKstHs","executionInfo":{"status":"ok","timestamp":1693419095183,"user_tz":-330,"elapsed":313,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"342bd496-b137-4fc6-b525-a48d201cfb6a"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DesignInfo(['Intercept', 'standardize(x0)', 'center(x1)'],\n","           factor_infos={EvalFactor('standardize(x0)'): FactorInfo(factor=EvalFactor('standardize(x0)'),\n","                                    type='numerical',\n","                                    state=<factor state>,\n","                                    num_columns=1),\n","                         EvalFactor('center(x1)'): FactorInfo(factor=EvalFactor('center(x1)'),\n","                                    type='numerical',\n","                                    state=<factor state>,\n","                                    num_columns=1)},\n","           term_codings=OrderedDict([(Term([]),\n","                                      [SubtermInfo(factors=(),\n","                                                   contrast_matrices={},\n","                                                   num_columns=1)]),\n","                                     (Term([EvalFactor('standardize(x0)')]),\n","                                      [SubtermInfo(factors=(EvalFactor('standardize(x0)'),),\n","                                                   contrast_matrices={},\n","                                                   num_columns=1)]),\n","                                     (Term([EvalFactor('center(x1)')]),\n","                                      [SubtermInfo(factors=(EvalFactor('center(x1)'),),\n","                                                   contrast_matrices={},\n","                                                   num_columns=1)])]))"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["new_x=patsy.build_design_matrices([X.design_info],new_data)\n","new_x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2QQBVzbrrVXD","executionInfo":{"status":"ok","timestamp":1693419095185,"user_tz":-330,"elapsed":310,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"10d10ca8-2439-40c4-98ae-a9e153874f31"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[DesignMatrix with shape (4, 3)\n","   Intercept  standardize(x0)  center(x1)\n","           1          2.12132        3.87\n","           1          2.82843        0.27\n","           1          3.53553        0.77\n","           1          4.24264        3.07\n","   Terms:\n","     'Intercept' (column 0)\n","     'standardize(x0)' (column 1)\n","     'center(x1)' (column 2)]"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["# because + means in patsy formula not an addition, when we want to add columns from dataset by name, we must wrap with special\n","# - I function"],"metadata":{"id":"S5QBD17buQRX","executionInfo":{"status":"ok","timestamp":1693419095187,"user_tz":-330,"elapsed":304,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["y,X=patsy.dmatrices('y~I(x0+x1)',data)"],"metadata":{"id":"4wkuOSAeuySF","executionInfo":{"status":"ok","timestamp":1693419095188,"user_tz":-330,"elapsed":304,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UM8DSl3gvHOU","executionInfo":{"status":"ok","timestamp":1693419095189,"user_tz":-330,"elapsed":303,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"296ede8a-ed8f-4890-e884-3f7dad58b8ed"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DesignMatrix with shape (5, 2)\n","  Intercept  I(x0 + x1)\n","          1        1.01\n","          1        1.99\n","          1        3.25\n","          1       -0.10\n","          1        5.00\n","  Terms:\n","    'Intercept' (column 0)\n","    'I(x0 + x1)' (column 1)"]},"metadata":{},"execution_count":39}]},{"cell_type":"markdown","source":["### categorical data and patsy\n","\n","> non-numeric data can be transformed for a model design matrix in many diffrent ways\n","\n","> when we using nonnumeric terms in patsy, they are converted to dummy variable by default\n","\n","> if there is intercept, one of the levels to left out to avoid collinearity"],"metadata":{"id":"Mz7GQ0OBvP9e"}},{"cell_type":"code","source":["data=pd.DataFrame({'key1':['a', 'a', 'b', 'b', 'a', 'b', 'a', 'b'],\n","                   'key2':[0,1,0,1,0,1,0,0],\n","                   'v1':[1,2,3,4,5,6,7,8],\n","                   'v2':[-1, 0, 2.5, -0.5, 4.0, -1.2, 0.2, -1.7]})"],"metadata":{"id":"SNVN8dCbvPgw","executionInfo":{"status":"ok","timestamp":1693419095190,"user_tz":-330,"elapsed":298,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"IMCKOche2SQ8","executionInfo":{"status":"ok","timestamp":1693419095191,"user_tz":-330,"elapsed":298,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"4ba5a15f-bdec-40d3-b406-ae999f567a8d"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  key1  key2  v1   v2\n","0    a     0   1 -1.0\n","1    a     1   2  0.0\n","2    b     0   3  2.5\n","3    b     1   4 -0.5\n","4    a     0   5  4.0\n","5    b     1   6 -1.2\n","6    a     0   7  0.2\n","7    b     0   8 -1.7"],"text/html":["\n","  <div id=\"df-39954dfd-066c-4df7-bc35-ac68ee1d79d1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>key1</th>\n","      <th>key2</th>\n","      <th>v1</th>\n","      <th>v2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>a</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>-1.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>a</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>b</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2.5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>b</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>-0.5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>a</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>b</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>-1.2</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>a</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>b</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>-1.7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-39954dfd-066c-4df7-bc35-ac68ee1d79d1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-39954dfd-066c-4df7-bc35-ac68ee1d79d1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-39954dfd-066c-4df7-bc35-ac68ee1d79d1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2cd7e787-337c-4a95-a14d-ed9ebfa261d9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2cd7e787-337c-4a95-a14d-ed9ebfa261d9')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2cd7e787-337c-4a95-a14d-ed9ebfa261d9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["y,X=patsy.dmatrices('v2~key1',data)"],"metadata":{"id":"UWwM-NSqwhZh","executionInfo":{"status":"ok","timestamp":1693419095192,"user_tz":-330,"elapsed":294,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LKy-kNdfwrLz","executionInfo":{"status":"ok","timestamp":1693419096075,"user_tz":-330,"elapsed":115,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"0340ed9d-a088-4a64-ed8c-b242bcd0dfae"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DesignMatrix with shape (8, 2)\n","  Intercept  key1[T.b]\n","          1          0\n","          1          0\n","          1          1\n","          1          1\n","          1          0\n","          1          1\n","          1          0\n","          1          1\n","  Terms:\n","    'Intercept' (column 0)\n","    'key1' (column 1)"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["# if we want to ommit the intercept value in matrices then we need to add +0\n","y,X=patsy.dmatrices('v2~key1+0',data)"],"metadata":{"id":"hn3Q92Zkw95c","executionInfo":{"status":"ok","timestamp":1693419096077,"user_tz":-330,"elapsed":112,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":44,"outputs":[]},{"cell_type":"code","source":["X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J09h5GX0xM1Y","executionInfo":{"status":"ok","timestamp":1693419096079,"user_tz":-330,"elapsed":108,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"75d1573b-2ebd-4bd8-f7dd-81e7462f5add"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DesignMatrix with shape (8, 2)\n","  key1[a]  key1[b]\n","        1        0\n","        1        0\n","        0        1\n","        0        1\n","        1        0\n","        0        1\n","        1        0\n","        0        1\n","  Terms:\n","    'key1' (columns 0:2)"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["# numberic columns can be interpreted as categorical with the c function\n","y,X=patsy.dmatrices('v2~C(key2)',data)"],"metadata":{"id":"8vJHNCepxTUL","executionInfo":{"status":"ok","timestamp":1693419096082,"user_tz":-330,"elapsed":95,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":46,"outputs":[]},{"cell_type":"code","source":["X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5e61qmU-xzID","executionInfo":{"status":"ok","timestamp":1693419096085,"user_tz":-330,"elapsed":97,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"37df727f-a143-4a88-936d-63c810e45502"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DesignMatrix with shape (8, 2)\n","  Intercept  C(key2)[T.1]\n","          1             0\n","          1             1\n","          1             0\n","          1             1\n","          1             0\n","          1             1\n","          1             0\n","          1             0\n","  Terms:\n","    'Intercept' (column 0)\n","    'C(key2)' (column 1)"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","source":["# when we using multiple categorical terms in model, things can be more complicated\n","\n","# as you can include terms of form of key1:key2 which can be used"],"metadata":{"id":"IiG8fI67x-of","executionInfo":{"status":"ok","timestamp":1693419096087,"user_tz":-330,"elapsed":92,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":48,"outputs":[]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"QbyLw_7u2Iy1","executionInfo":{"status":"ok","timestamp":1693419096089,"user_tz":-330,"elapsed":92,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"defe01a7-77ea-4cbf-e3f9-ef4e8e3caa1a"},"execution_count":49,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  key1  key2  v1   v2\n","0    a     0   1 -1.0\n","1    a     1   2  0.0\n","2    b     0   3  2.5\n","3    b     1   4 -0.5\n","4    a     0   5  4.0\n","5    b     1   6 -1.2\n","6    a     0   7  0.2\n","7    b     0   8 -1.7"],"text/html":["\n","  <div id=\"df-c69e5873-8a11-4072-8dfa-904f8e4df183\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>key1</th>\n","      <th>key2</th>\n","      <th>v1</th>\n","      <th>v2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>a</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>-1.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>a</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>b</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>2.5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>b</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>-0.5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>a</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>b</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>-1.2</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>a</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>b</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>-1.7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c69e5873-8a11-4072-8dfa-904f8e4df183')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c69e5873-8a11-4072-8dfa-904f8e4df183 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c69e5873-8a11-4072-8dfa-904f8e4df183');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-be247d31-0ed3-4d28-84b4-7a89a477d855\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-be247d31-0ed3-4d28-84b4-7a89a477d855')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-be247d31-0ed3-4d28-84b4-7a89a477d855 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["# for example of analysis of variance (ANOVA) models\n","\n","data['key2']=data['key2'].map({0:'zero',1:'one'})\n","data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"0Jgox7uZyWSD","executionInfo":{"status":"ok","timestamp":1693419096091,"user_tz":-330,"elapsed":87,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"7799cbc4-57e5-4d06-e31c-d515966634b4"},"execution_count":50,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  key1  key2  v1   v2\n","0    a  zero   1 -1.0\n","1    a   one   2  0.0\n","2    b  zero   3  2.5\n","3    b   one   4 -0.5\n","4    a  zero   5  4.0\n","5    b   one   6 -1.2\n","6    a  zero   7  0.2\n","7    b  zero   8 -1.7"],"text/html":["\n","  <div id=\"df-9e630f44-cee6-409b-8374-0f0694c1e1bd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>key1</th>\n","      <th>key2</th>\n","      <th>v1</th>\n","      <th>v2</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>a</td>\n","      <td>zero</td>\n","      <td>1</td>\n","      <td>-1.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>a</td>\n","      <td>one</td>\n","      <td>2</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>b</td>\n","      <td>zero</td>\n","      <td>3</td>\n","      <td>2.5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>b</td>\n","      <td>one</td>\n","      <td>4</td>\n","      <td>-0.5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>a</td>\n","      <td>zero</td>\n","      <td>5</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>b</td>\n","      <td>one</td>\n","      <td>6</td>\n","      <td>-1.2</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>a</td>\n","      <td>zero</td>\n","      <td>7</td>\n","      <td>0.2</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>b</td>\n","      <td>zero</td>\n","      <td>8</td>\n","      <td>-1.7</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9e630f44-cee6-409b-8374-0f0694c1e1bd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9e630f44-cee6-409b-8374-0f0694c1e1bd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9e630f44-cee6-409b-8374-0f0694c1e1bd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a480f030-bb07-47ce-b933-2f8b03e85061\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a480f030-bb07-47ce-b933-2f8b03e85061')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a480f030-bb07-47ce-b933-2f8b03e85061 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":[" y, X = patsy.dmatrices('v2 ~ key1 + key2', data)"],"metadata":{"id":"-VeO2JWpy1Eo","executionInfo":{"status":"ok","timestamp":1693419096094,"user_tz":-330,"elapsed":87,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","source":["X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6Y47GK0A2hM8","executionInfo":{"status":"ok","timestamp":1693419096097,"user_tz":-330,"elapsed":89,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"22b706f4-cb40-4934-9c04-aedac4e6ea86"},"execution_count":52,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DesignMatrix with shape (8, 3)\n","  Intercept  key1[T.b]  key2[T.zero]\n","          1          0             1\n","          1          0             0\n","          1          1             1\n","          1          1             0\n","          1          0             1\n","          1          1             0\n","          1          0             1\n","          1          1             1\n","  Terms:\n","    'Intercept' (column 0)\n","    'key1' (column 1)\n","    'key2' (column 2)"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["y,X=patsy.dmatrices('v2 ~ key1 + key2 + key1:key2',data)"],"metadata":{"id":"vFVyfE2R2sL7","executionInfo":{"status":"ok","timestamp":1693419096101,"user_tz":-330,"elapsed":83,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":53,"outputs":[]},{"cell_type":"code","source":["X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KLtc-RiI240S","executionInfo":{"status":"ok","timestamp":1693419096104,"user_tz":-330,"elapsed":85,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"df5769a6-e2d7-41e4-87e6-afdfbabb2b6c"},"execution_count":54,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DesignMatrix with shape (8, 4)\n","  Intercept  key1[T.b]  key2[T.zero]  key1[T.b]:key2[T.zero]\n","          1          0             1                       0\n","          1          0             0                       0\n","          1          1             1                       1\n","          1          1             0                       0\n","          1          0             1                       0\n","          1          1             0                       0\n","          1          0             1                       0\n","          1          1             1                       1\n","  Terms:\n","    'Intercept' (column 0)\n","    'key1' (column 1)\n","    'key2' (column 2)\n","    'key1:key2' (column 3)"]},"metadata":{},"execution_count":54}]},{"cell_type":"markdown","source":["## introduction to stats model\n","\n","> stats is python library for fitting many kind of statistical models, performing statical test, data exploration and data visualization\n","\n","> statistical contains more classical frequent statiscal method"],"metadata":{"id":"Rr_ypbMN2-RQ"}},{"cell_type":"markdown","source":["some kind of models found in statistical\n","\n","\n",". Linear models, generalized linear models, and robust linear models\n","\n",". linear mixed effect models\n","\n",". Analyst of variance ANOVA\n","\n",". time series processes and state space models\n","\n",". genaralized methods of moments"],"metadata":{"id":"vonB5w7u3mc0"}},{"cell_type":"code","source":["# estimating linear models\n","# in stats library many kind of linear regression model are available\n","# from basic ordinary least squares\n","# from advanced iteratively reweighted least squares"],"metadata":{"id":"86jTcA85pMj-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# linear models are two diffrent interfaces types in statsmodels\n","# 1. array based  2. formula based\n","# above 2 types we can access through the API module imports"],"metadata":{"id":"HPA0gf8Kp0iE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import statsmodels.api as sm\n","import statsmodels.formula.api as smf"],"metadata":{"id":"9LbGYSJ3qOoX","executionInfo":{"status":"ok","timestamp":1693420175394,"user_tz":-330,"elapsed":408,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":60,"outputs":[]},{"cell_type":"code","source":["# we going to generate linear model from ran"],"metadata":{"id":"e6aIdwj9qkOM","executionInfo":{"status":"ok","timestamp":1693420177563,"user_tz":-330,"elapsed":365,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":61,"outputs":[]},{"cell_type":"code","source":["rng=np.random.default_rng(seed=12345)\n","\n","def dnorm(mean,variance,size=1):\n","    if isinstance(size,int):\n","        size=size,\n","    return mean + np.sqrt(variance) * rng.standard_normal(*size)\n","\n","N=15\n","\n","X=np.c_[dnorm(0,0.4,size=N),\n","        dnorm(0,0.6,size=N),\n","        dnorm(0,0.2,size=N)]\n","\n","eps=dnorm(0,0.3,size=N)\n","beta=[0.1,0.3,0.5]\n","\n","y=np.dot(X,beta)+eps"],"metadata":{"id":"UZBl__ICrWCY","executionInfo":{"status":"ok","timestamp":1693420925648,"user_tz":-330,"elapsed":494,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":70,"outputs":[]},{"cell_type":"code","source":["X[:5]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RBlocPL4wQ2s","executionInfo":{"status":"ok","timestamp":1693420960453,"user_tz":-330,"elapsed":419,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"dc92d667-80e0-498a-ec2c-09a22c1e5253"},"execution_count":72,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-0.90050602, -0.0470099 ,  0.34764656],\n","       [ 0.79925205,  0.6110362 ,  0.37057603],\n","       [-0.55065483, -0.97341095, -0.42887261],\n","       [-0.16391555,  0.44605731, -0.54085488],\n","       [-0.04765129,  1.08364447, -0.63159619]])"]},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["y[:5]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lNy_l_TRwU16","executionInfo":{"status":"ok","timestamp":1693420970099,"user_tz":-330,"elapsed":496,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"4ef630e3-e076-4589-af0a-34c1891d5873"},"execution_count":73,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([-0.53732435,  0.52299072,  0.1762998 , -0.11951184,  0.04337164])"]},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["# linear model generally fitted into the intercept term. hope we can saw that in patsy.\n","# now sm.add_constant function can add intercpt column in existing matrix\n","\n","X_model=sm.add_constant(X)\n","X_model[:5]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4xGCChRhyVEA","executionInfo":{"status":"ok","timestamp":1693421617937,"user_tz":-330,"elapsed":360,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"f4d09fca-1fcf-4eee-a28b-ee0278026028"},"execution_count":75,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1.        , -0.90050602, -0.0470099 ,  0.34764656],\n","       [ 1.        ,  0.79925205,  0.6110362 ,  0.37057603],\n","       [ 1.        , -0.55065483, -0.97341095, -0.42887261],\n","       [ 1.        , -0.16391555,  0.44605731, -0.54085488],\n","       [ 1.        , -0.04765129,  1.08364447, -0.63159619]])"]},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":["# the sm.OLS class can fit an ordinary least squares linear regression\n","model=sm.OLS(y,X) # OLS stands for ordinary least square"],"metadata":{"id":"0nvNUjWny3kQ","executionInfo":{"status":"ok","timestamp":1693422087708,"user_tz":-330,"elapsed":440,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":86,"outputs":[]},{"cell_type":"code","source":["# the models fit method returns regression result of object contained estimates model parameters and other diagnosis\n","results=model.fit()"],"metadata":{"id":"-fOk0DmOzKYt","executionInfo":{"status":"ok","timestamp":1693421830327,"user_tz":-330,"elapsed":25,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":79,"outputs":[]},{"cell_type":"code","source":["results.params"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8wAyjKLjzsTD","executionInfo":{"status":"ok","timestamp":1693421862827,"user_tz":-330,"elapsed":402,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"ee48afe8-5215-4339-e5d5-7b63c2bb7409"},"execution_count":82,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 0.05860419,  0.15744499, -0.07289536])"]},"metadata":{},"execution_count":82}]},{"cell_type":"code","source":["# the summary method on results can print the model detailing diagnostic output of the model\n","\n","print(results.summary())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QlCKe8BkzyGZ","executionInfo":{"status":"ok","timestamp":1693422001926,"user_tz":-330,"elapsed":351,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"9d02290d-2bd5-44f6-8a46-db10438a2927"},"execution_count":85,"outputs":[{"output_type":"stream","name":"stdout","text":["                                 OLS Regression Results                                \n","=======================================================================================\n","Dep. Variable:                      y   R-squared (uncentered):                   0.173\n","Model:                            OLS   Adj. R-squared (uncentered):             -0.034\n","Method:                 Least Squares   F-statistic:                             0.8362\n","Date:                Wed, 30 Aug 2023   Prob (F-statistic):                       0.500\n","Time:                        19:00:01   Log-Likelihood:                         -5.3315\n","No. Observations:                  15   AIC:                                      16.66\n","Df Residuals:                      12   BIC:                                      18.79\n","Df Model:                           3                                                  \n","Covariance Type:            nonrobust                                                  \n","==============================================================================\n","                 coef    std err          t      P>|t|      [0.025      0.975]\n","------------------------------------------------------------------------------\n","x1             0.0586      0.141      0.415      0.685      -0.249       0.366\n","x2             0.1574      0.108      1.460      0.170      -0.077       0.392\n","x3            -0.0729      0.273     -0.267      0.794      -0.667       0.521\n","==============================================================================\n","Omnibus:                        3.873   Durbin-Watson:                   2.346\n","Prob(Omnibus):                  0.144   Jarque-Bera (JB):                1.319\n","Skew:                          -0.189   Prob(JB):                        0.517\n","Kurtosis:                       1.597   Cond. No.                         2.57\n","==============================================================================\n","\n","Notes:\n","[1] R² is computed without centering (uncentered) since the model does not contain a constant.\n","[2] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/scipy/stats/_stats_py.py:1736: UserWarning: kurtosistest only valid for n>=20 ... continuing anyway, n=15\n","  warnings.warn(\"kurtosistest only valid for n>=20 ... continuing \"\n"]}]},{"cell_type":"code","source":["# the paramaters are given are generic names x1,x2 and so on. suppose instead that all of the model parameters are dataframe\n","data = pd.DataFrame(X,columns=['col0','col1','col2'])\n","\n","data['y']=y\n","\n","data[:5]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"o2ElU1770npZ","executionInfo":{"status":"ok","timestamp":1693422285137,"user_tz":-330,"elapsed":829,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"75b8c0b1-ee49-4415-8f99-f17e2123331a"},"execution_count":88,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       col0      col1      col2         y\n","0 -0.900506 -0.047010  0.347647 -0.537324\n","1  0.799252  0.611036  0.370576  0.522991\n","2 -0.550655 -0.973411 -0.428873  0.176300\n","3 -0.163916  0.446057 -0.540855 -0.119512\n","4 -0.047651  1.083644 -0.631596  0.043372"],"text/html":["\n","  <div id=\"df-fcdd3dc3-d686-475e-b262-3d38ba190930\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>col0</th>\n","      <th>col1</th>\n","      <th>col2</th>\n","      <th>y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>-0.900506</td>\n","      <td>-0.047010</td>\n","      <td>0.347647</td>\n","      <td>-0.537324</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.799252</td>\n","      <td>0.611036</td>\n","      <td>0.370576</td>\n","      <td>0.522991</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>-0.550655</td>\n","      <td>-0.973411</td>\n","      <td>-0.428873</td>\n","      <td>0.176300</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>-0.163916</td>\n","      <td>0.446057</td>\n","      <td>-0.540855</td>\n","      <td>-0.119512</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>-0.047651</td>\n","      <td>1.083644</td>\n","      <td>-0.631596</td>\n","      <td>0.043372</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fcdd3dc3-d686-475e-b262-3d38ba190930')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fcdd3dc3-d686-475e-b262-3d38ba190930 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fcdd3dc3-d686-475e-b262-3d38ba190930');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8bb8e3e0-3576-4e2c-b48c-231a39f47e0b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8bb8e3e0-3576-4e2c-b48c-231a39f47e0b')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8bb8e3e0-3576-4e2c-b48c-231a39f47e0b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":88}]},{"cell_type":"code","source":["# now we can use the statsmodels formula API and patsy formula strings\n","results=smf.ols(' y ~ col0 + col1 + col2 ',data=data).fit()\n","\n","results.params"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BmyHzK8s1bFz","executionInfo":{"status":"ok","timestamp":1693422499114,"user_tz":-330,"elapsed":643,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"a1cd494e-297e-4324-9ee0-39a8e34a648d"},"execution_count":91,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Intercept    0.010814\n","col0         0.060512\n","col1         0.154037\n","col2        -0.069473\n","dtype: float64"]},"metadata":{},"execution_count":91}]},{"cell_type":"code","source":["results.tvalues"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pkD_mURM2QL8","executionInfo":{"status":"ok","timestamp":1693422536799,"user_tz":-330,"elapsed":431,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"350b4c3f-a8ea-41d4-9886-f483729c89f5"},"execution_count":93,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Intercept    0.098544\n","col0         0.407385\n","col1         1.308212\n","col2        -0.242187\n","dtype: float64"]},"metadata":{},"execution_count":93}]},{"cell_type":"code","source":["# we also do not need to use add_constant when we using formulas and pandas objects"],"metadata":{"id":"2P0pa2oy2gKD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# given new out of sample data, you can compute the predicted values given the estimated model parameters\n","\n","results.predict(data[:5])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1Ee1PwwS2u4h","executionInfo":{"status":"ok","timestamp":1693422753373,"user_tz":-330,"elapsed":379,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"9e809f6a-8710-493c-c3d0-967720fc5c03"},"execution_count":95,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0   -0.075071\n","1    0.127555\n","2   -0.142654\n","3    0.107179\n","4    0.218730\n","dtype: float64"]},"metadata":{},"execution_count":95}]},{"cell_type":"markdown","source":["### Estimating time series process"],"metadata":{"id":"JBR_dBbs3OJ7"}},{"cell_type":"code","source":["# lets simulate some time series data with autoregressive structure and noise, just look the below code for better understand\n","init_x=4\n","values=[init_x,init_x]\n","N=1000\n","b0=0.8\n","b1=-0.4\n","noise=dnorm(0,0.1,N)\n","\n","for i in range(N):\n","    new_x=values[-1]*b0+values[-2]*b1+noise[i]\n","    values.append(new_x)\n","\n","# this AR data has two lags with parameters are 0.8,-0.4. when you fit the AR model, you may not know the number of lagged terms\n","# - to include. so you can fit the AR model with larger number of lags"],"metadata":{"id":"5HNH-Wsd3N1i","executionInfo":{"status":"ok","timestamp":1693423107775,"user_tz":-330,"elapsed":647,"user":{"displayName":"jagan n","userId":"02577005402999205958"}}},"execution_count":96,"outputs":[]},{"cell_type":"code","source":["from statsmodels.tsa.ar_model import AutoReg\n","\n","MAXLAGS=5\n","\n","model=AutoReg(values,MAXLAGS)\n","\n","results=model.fit()\n","\n","#  estimated parameters of the results have intercept first, and estimates of first two lags next\n","\n","results.params"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HfMtD1p85W0h","executionInfo":{"status":"ok","timestamp":1693423451794,"user_tz":-330,"elapsed":381,"user":{"displayName":"jagan n","userId":"02577005402999205958"}},"outputId":"9e67cca4-ee59-45af-c434-3a11b69f30ae"},"execution_count":98,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([ 0.00251422,  0.82529933, -0.43723659, -0.00575367,  0.03678207,\n","       -0.03765509])"]},"metadata":{},"execution_count":98}]},{"cell_type":"markdown","source":["## introduction to Scikit Learn\n","\n","> scikit-learn one of most widely used and trusted for general purpose of python machine learning toolkits"],"metadata":{"id":"sdRqpDue6KNh"}}]}